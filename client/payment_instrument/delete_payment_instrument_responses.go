// Code generated by go-swagger; DO NOT EDIT.

package payment_instrument

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeletePaymentInstrumentReader is a Reader for the DeletePaymentInstrument structure.
type DeletePaymentInstrumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePaymentInstrumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePaymentInstrumentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeletePaymentInstrumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePaymentInstrumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewDeletePaymentInstrumentGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewDeletePaymentInstrumentFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePaymentInstrumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /tms/v1/paymentinstruments/{tokenId}] deletePaymentInstrument", response, response.Code())
	}
}

// NewDeletePaymentInstrumentNoContent creates a DeletePaymentInstrumentNoContent with default headers values
func NewDeletePaymentInstrumentNoContent() *DeletePaymentInstrumentNoContent {
	return &DeletePaymentInstrumentNoContent{}
}

/*
DeletePaymentInstrumentNoContent describes a response with status code 204, with default header values.

An existing Payment Instrument associated with the supplied `tokenId` has been deleted.
*/
type DeletePaymentInstrumentNoContent struct {

	/* A globally unique ID associated with your request.
	 */
	UniqueTransactionID string
}

// IsSuccess returns true when this delete payment instrument no content response has a 2xx status code
func (o *DeletePaymentInstrumentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete payment instrument no content response has a 3xx status code
func (o *DeletePaymentInstrumentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete payment instrument no content response has a 4xx status code
func (o *DeletePaymentInstrumentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete payment instrument no content response has a 5xx status code
func (o *DeletePaymentInstrumentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete payment instrument no content response a status code equal to that given
func (o *DeletePaymentInstrumentNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete payment instrument no content response
func (o *DeletePaymentInstrumentNoContent) Code() int {
	return 204
}

func (o *DeletePaymentInstrumentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentNoContent ", 204)
}

func (o *DeletePaymentInstrumentNoContent) String() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentNoContent ", 204)
}

func (o *DeletePaymentInstrumentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	return nil
}

// NewDeletePaymentInstrumentForbidden creates a DeletePaymentInstrumentForbidden with default headers values
func NewDeletePaymentInstrumentForbidden() *DeletePaymentInstrumentForbidden {
	return &DeletePaymentInstrumentForbidden{}
}

/*
DeletePaymentInstrumentForbidden describes a response with status code 403, with default header values.

Forbidden. The profile might not have permission to perform the token operation.
*/
type DeletePaymentInstrumentForbidden struct {

	/* A globally unique ID associated with your request.
	 */
	UniqueTransactionID string

	Payload []*DeletePaymentInstrumentForbiddenBodyItems0
}

// IsSuccess returns true when this delete payment instrument forbidden response has a 2xx status code
func (o *DeletePaymentInstrumentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete payment instrument forbidden response has a 3xx status code
func (o *DeletePaymentInstrumentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete payment instrument forbidden response has a 4xx status code
func (o *DeletePaymentInstrumentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete payment instrument forbidden response has a 5xx status code
func (o *DeletePaymentInstrumentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete payment instrument forbidden response a status code equal to that given
func (o *DeletePaymentInstrumentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete payment instrument forbidden response
func (o *DeletePaymentInstrumentForbidden) Code() int {
	return 403
}

func (o *DeletePaymentInstrumentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentForbidden  %+v", 403, o.Payload)
}

func (o *DeletePaymentInstrumentForbidden) String() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentForbidden  %+v", 403, o.Payload)
}

func (o *DeletePaymentInstrumentForbidden) GetPayload() []*DeletePaymentInstrumentForbiddenBodyItems0 {
	return o.Payload
}

func (o *DeletePaymentInstrumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePaymentInstrumentNotFound creates a DeletePaymentInstrumentNotFound with default headers values
func NewDeletePaymentInstrumentNotFound() *DeletePaymentInstrumentNotFound {
	return &DeletePaymentInstrumentNotFound{}
}

/*
DeletePaymentInstrumentNotFound describes a response with status code 404, with default header values.

Token Not Found. The `tokenid` may not exist or was entered incorrectly.
*/
type DeletePaymentInstrumentNotFound struct {

	/* A globally unique ID associated with your request.
	 */
	UniqueTransactionID string

	Payload []*DeletePaymentInstrumentNotFoundBodyItems0
}

// IsSuccess returns true when this delete payment instrument not found response has a 2xx status code
func (o *DeletePaymentInstrumentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete payment instrument not found response has a 3xx status code
func (o *DeletePaymentInstrumentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete payment instrument not found response has a 4xx status code
func (o *DeletePaymentInstrumentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete payment instrument not found response has a 5xx status code
func (o *DeletePaymentInstrumentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete payment instrument not found response a status code equal to that given
func (o *DeletePaymentInstrumentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete payment instrument not found response
func (o *DeletePaymentInstrumentNotFound) Code() int {
	return 404
}

func (o *DeletePaymentInstrumentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentNotFound  %+v", 404, o.Payload)
}

func (o *DeletePaymentInstrumentNotFound) String() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentNotFound  %+v", 404, o.Payload)
}

func (o *DeletePaymentInstrumentNotFound) GetPayload() []*DeletePaymentInstrumentNotFoundBodyItems0 {
	return o.Payload
}

func (o *DeletePaymentInstrumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePaymentInstrumentGone creates a DeletePaymentInstrumentGone with default headers values
func NewDeletePaymentInstrumentGone() *DeletePaymentInstrumentGone {
	return &DeletePaymentInstrumentGone{}
}

/*
DeletePaymentInstrumentGone describes a response with status code 410, with default header values.

Token Not Available. The token has been deleted.
*/
type DeletePaymentInstrumentGone struct {

	/* A globally unique ID associated with your request.
	 */
	UniqueTransactionID string

	Payload []*DeletePaymentInstrumentGoneBodyItems0
}

// IsSuccess returns true when this delete payment instrument gone response has a 2xx status code
func (o *DeletePaymentInstrumentGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete payment instrument gone response has a 3xx status code
func (o *DeletePaymentInstrumentGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete payment instrument gone response has a 4xx status code
func (o *DeletePaymentInstrumentGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete payment instrument gone response has a 5xx status code
func (o *DeletePaymentInstrumentGone) IsServerError() bool {
	return false
}

// IsCode returns true when this delete payment instrument gone response a status code equal to that given
func (o *DeletePaymentInstrumentGone) IsCode(code int) bool {
	return code == 410
}

// Code gets the status code for the delete payment instrument gone response
func (o *DeletePaymentInstrumentGone) Code() int {
	return 410
}

func (o *DeletePaymentInstrumentGone) Error() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentGone  %+v", 410, o.Payload)
}

func (o *DeletePaymentInstrumentGone) String() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentGone  %+v", 410, o.Payload)
}

func (o *DeletePaymentInstrumentGone) GetPayload() []*DeletePaymentInstrumentGoneBodyItems0 {
	return o.Payload
}

func (o *DeletePaymentInstrumentGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePaymentInstrumentFailedDependency creates a DeletePaymentInstrumentFailedDependency with default headers values
func NewDeletePaymentInstrumentFailedDependency() *DeletePaymentInstrumentFailedDependency {
	return &DeletePaymentInstrumentFailedDependency{}
}

/*
DeletePaymentInstrumentFailedDependency describes a response with status code 424, with default header values.

Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.
*/
type DeletePaymentInstrumentFailedDependency struct {

	/* A globally unique id associated with your request.
	 */
	UniqueTransactionID string

	Payload []*DeletePaymentInstrumentFailedDependencyBodyItems0
}

// IsSuccess returns true when this delete payment instrument failed dependency response has a 2xx status code
func (o *DeletePaymentInstrumentFailedDependency) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete payment instrument failed dependency response has a 3xx status code
func (o *DeletePaymentInstrumentFailedDependency) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete payment instrument failed dependency response has a 4xx status code
func (o *DeletePaymentInstrumentFailedDependency) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete payment instrument failed dependency response has a 5xx status code
func (o *DeletePaymentInstrumentFailedDependency) IsServerError() bool {
	return false
}

// IsCode returns true when this delete payment instrument failed dependency response a status code equal to that given
func (o *DeletePaymentInstrumentFailedDependency) IsCode(code int) bool {
	return code == 424
}

// Code gets the status code for the delete payment instrument failed dependency response
func (o *DeletePaymentInstrumentFailedDependency) Code() int {
	return 424
}

func (o *DeletePaymentInstrumentFailedDependency) Error() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentFailedDependency  %+v", 424, o.Payload)
}

func (o *DeletePaymentInstrumentFailedDependency) String() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentFailedDependency  %+v", 424, o.Payload)
}

func (o *DeletePaymentInstrumentFailedDependency) GetPayload() []*DeletePaymentInstrumentFailedDependencyBodyItems0 {
	return o.Payload
}

func (o *DeletePaymentInstrumentFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePaymentInstrumentInternalServerError creates a DeletePaymentInstrumentInternalServerError with default headers values
func NewDeletePaymentInstrumentInternalServerError() *DeletePaymentInstrumentInternalServerError {
	return &DeletePaymentInstrumentInternalServerError{}
}

/*
DeletePaymentInstrumentInternalServerError describes a response with status code 500, with default header values.

Unexpected error.
*/
type DeletePaymentInstrumentInternalServerError struct {

	/* A globally unique id associated with your request.
	 */
	UniqueTransactionID string

	Payload []*DeletePaymentInstrumentInternalServerErrorBodyItems0
}

// IsSuccess returns true when this delete payment instrument internal server error response has a 2xx status code
func (o *DeletePaymentInstrumentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete payment instrument internal server error response has a 3xx status code
func (o *DeletePaymentInstrumentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete payment instrument internal server error response has a 4xx status code
func (o *DeletePaymentInstrumentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete payment instrument internal server error response has a 5xx status code
func (o *DeletePaymentInstrumentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete payment instrument internal server error response a status code equal to that given
func (o *DeletePaymentInstrumentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete payment instrument internal server error response
func (o *DeletePaymentInstrumentInternalServerError) Code() int {
	return 500
}

func (o *DeletePaymentInstrumentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePaymentInstrumentInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /tms/v1/paymentinstruments/{tokenId}][%d] deletePaymentInstrumentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePaymentInstrumentInternalServerError) GetPayload() []*DeletePaymentInstrumentInternalServerErrorBodyItems0 {
	return o.Payload
}

func (o *DeletePaymentInstrumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header uniqueTransactionID
	hdrUniqueTransactionID := response.GetHeader("uniqueTransactionID")

	if hdrUniqueTransactionID != "" {
		o.UniqueTransactionID = hdrUniqueTransactionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DeletePaymentInstrumentFailedDependencyBodyItems0 delete payment instrument failed dependency body items0
swagger:model DeletePaymentInstrumentFailedDependencyBodyItems0
*/
type DeletePaymentInstrumentFailedDependencyBodyItems0 struct {

	// details
	Details *DeletePaymentInstrumentFailedDependencyBodyItems0Details `json:"details,omitempty"`

	// The detailed message related to the type stated above.
	Message string `json:"message,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this delete payment instrument failed dependency body items0
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentFailedDependencyBodyItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	if o.Details != nil {
		if err := o.Details.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this delete payment instrument failed dependency body items0 based on the context it is used
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentFailedDependencyBodyItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if o.Details != nil {

		if swag.IsZero(o.Details) { // not required
			return nil
		}

		if err := o.Details.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentFailedDependencyBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentFailedDependencyBodyItems0Details delete payment instrument failed dependency body items0 details
swagger:model DeletePaymentInstrumentFailedDependencyBodyItems0Details
*/
type DeletePaymentInstrumentFailedDependencyBodyItems0Details struct {

	// The location of the field that threw the error.
	Location string `json:"location,omitempty"`

	// The name of the field that threw the error.
	Name string `json:"name,omitempty"`
}

// Validate validates this delete payment instrument failed dependency body items0 details
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0Details) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete payment instrument failed dependency body items0 details based on context it is used
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0Details) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0Details) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentFailedDependencyBodyItems0Details) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentFailedDependencyBodyItems0Details
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentForbiddenBodyItems0 delete payment instrument forbidden body items0
swagger:model DeletePaymentInstrumentForbiddenBodyItems0
*/
type DeletePaymentInstrumentForbiddenBodyItems0 struct {

	// details
	Details *DeletePaymentInstrumentForbiddenBodyItems0Details `json:"details,omitempty"`

	// The detailed message related to the type stated above.
	Message string `json:"message,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this delete payment instrument forbidden body items0
func (o *DeletePaymentInstrumentForbiddenBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentForbiddenBodyItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	if o.Details != nil {
		if err := o.Details.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this delete payment instrument forbidden body items0 based on the context it is used
func (o *DeletePaymentInstrumentForbiddenBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentForbiddenBodyItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if o.Details != nil {

		if swag.IsZero(o.Details) { // not required
			return nil
		}

		if err := o.Details.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentForbiddenBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentForbiddenBodyItems0) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentForbiddenBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentForbiddenBodyItems0Details delete payment instrument forbidden body items0 details
swagger:model DeletePaymentInstrumentForbiddenBodyItems0Details
*/
type DeletePaymentInstrumentForbiddenBodyItems0Details struct {

	// The location of the field that threw the error.
	Location string `json:"location,omitempty"`

	// The name of the field that threw the error.
	Name string `json:"name,omitempty"`
}

// Validate validates this delete payment instrument forbidden body items0 details
func (o *DeletePaymentInstrumentForbiddenBodyItems0Details) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete payment instrument forbidden body items0 details based on context it is used
func (o *DeletePaymentInstrumentForbiddenBodyItems0Details) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentForbiddenBodyItems0Details) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentForbiddenBodyItems0Details) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentForbiddenBodyItems0Details
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentGoneBodyItems0 delete payment instrument gone body items0
swagger:model DeletePaymentInstrumentGoneBodyItems0
*/
type DeletePaymentInstrumentGoneBodyItems0 struct {

	// details
	Details *DeletePaymentInstrumentGoneBodyItems0Details `json:"details,omitempty"`

	// The detailed message related to the type stated above.
	Message string `json:"message,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this delete payment instrument gone body items0
func (o *DeletePaymentInstrumentGoneBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentGoneBodyItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	if o.Details != nil {
		if err := o.Details.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this delete payment instrument gone body items0 based on the context it is used
func (o *DeletePaymentInstrumentGoneBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentGoneBodyItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if o.Details != nil {

		if swag.IsZero(o.Details) { // not required
			return nil
		}

		if err := o.Details.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentGoneBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentGoneBodyItems0) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentGoneBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentGoneBodyItems0Details delete payment instrument gone body items0 details
swagger:model DeletePaymentInstrumentGoneBodyItems0Details
*/
type DeletePaymentInstrumentGoneBodyItems0Details struct {

	// The location of the field that threw the error.
	Location string `json:"location,omitempty"`

	// The name of the field that threw the error.
	Name string `json:"name,omitempty"`
}

// Validate validates this delete payment instrument gone body items0 details
func (o *DeletePaymentInstrumentGoneBodyItems0Details) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete payment instrument gone body items0 details based on context it is used
func (o *DeletePaymentInstrumentGoneBodyItems0Details) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentGoneBodyItems0Details) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentGoneBodyItems0Details) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentGoneBodyItems0Details
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentInternalServerErrorBodyItems0 delete payment instrument internal server error body items0
swagger:model DeletePaymentInstrumentInternalServerErrorBodyItems0
*/
type DeletePaymentInstrumentInternalServerErrorBodyItems0 struct {

	// details
	Details *DeletePaymentInstrumentInternalServerErrorBodyItems0Details `json:"details,omitempty"`

	// The detailed message related to the type stated above.
	Message string `json:"message,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this delete payment instrument internal server error body items0
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	if o.Details != nil {
		if err := o.Details.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this delete payment instrument internal server error body items0 based on the context it is used
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if o.Details != nil {

		if swag.IsZero(o.Details) { // not required
			return nil
		}

		if err := o.Details.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentInternalServerErrorBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentInternalServerErrorBodyItems0Details delete payment instrument internal server error body items0 details
swagger:model DeletePaymentInstrumentInternalServerErrorBodyItems0Details
*/
type DeletePaymentInstrumentInternalServerErrorBodyItems0Details struct {

	// The location of the field that threw the error.
	Location string `json:"location,omitempty"`

	// The name of the field that threw the error.
	Name string `json:"name,omitempty"`
}

// Validate validates this delete payment instrument internal server error body items0 details
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0Details) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete payment instrument internal server error body items0 details based on context it is used
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0Details) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0Details) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentInternalServerErrorBodyItems0Details) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentInternalServerErrorBodyItems0Details
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentNotFoundBodyItems0 delete payment instrument not found body items0
swagger:model DeletePaymentInstrumentNotFoundBodyItems0
*/
type DeletePaymentInstrumentNotFoundBodyItems0 struct {

	// details
	Details *DeletePaymentInstrumentNotFoundBodyItems0Details `json:"details,omitempty"`

	// The detailed message related to the type stated above.
	Message string `json:"message,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this delete payment instrument not found body items0
func (o *DeletePaymentInstrumentNotFoundBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentNotFoundBodyItems0) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	if o.Details != nil {
		if err := o.Details.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this delete payment instrument not found body items0 based on the context it is used
func (o *DeletePaymentInstrumentNotFoundBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeletePaymentInstrumentNotFoundBodyItems0) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if o.Details != nil {

		if swag.IsZero(o.Details) { // not required
			return nil
		}

		if err := o.Details.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("details")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentNotFoundBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentNotFoundBodyItems0) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentNotFoundBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePaymentInstrumentNotFoundBodyItems0Details delete payment instrument not found body items0 details
swagger:model DeletePaymentInstrumentNotFoundBodyItems0Details
*/
type DeletePaymentInstrumentNotFoundBodyItems0Details struct {

	// The location of the field that threw the error.
	Location string `json:"location,omitempty"`

	// The name of the field that threw the error.
	Name string `json:"name,omitempty"`
}

// Validate validates this delete payment instrument not found body items0 details
func (o *DeletePaymentInstrumentNotFoundBodyItems0Details) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete payment instrument not found body items0 details based on context it is used
func (o *DeletePaymentInstrumentNotFoundBodyItems0Details) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePaymentInstrumentNotFoundBodyItems0Details) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePaymentInstrumentNotFoundBodyItems0Details) UnmarshalBinary(b []byte) error {
	var res DeletePaymentInstrumentNotFoundBodyItems0Details
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
